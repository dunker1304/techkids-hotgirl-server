{"version":3,"sources":["img/logo.png","axios.js","config.js","Components/SearchField.js","Components/ProfilePanel.js","Components/NavBar.js","Components/GirlImage.js","Components/MainContent.js","Containers/HomeScreen.js","Containers/DetailScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","process","REACT_APP_STATE","create","baseURL","withCredentials","SearchField","handleTextSearch","event","_this","props","onSearchChanged","target","value","react_default","a","createElement","className","onChange","this","type","placeholder","Component","ProfilePanel","display","username","onClick","onLogin","NavBar","Components_SearchField","src","logo","Components_ProfilePanel","GirlImage","comments","img","comment","map","createdBy","content","imageUrl","alt","title","description","MainContent","allImages","images","key","_id","Link","to","concat","Components_GirlImage","HomeScreen","state","searchString","text","setState","_this2","get","then","data","console","log","catch","error","_this3","displayedImages","filter","includes","Components_NavBar","Components_MainContent","DetailScreen","match","params","ImageId","image","_onLogin","App","post","password","response","id","BrowserRouter","Route","exact","path","render","Containers_HomeScreen","Object","assign","Containers_DetailScreen","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39719f57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2c339c32.png\";","import axios from 'axios';\r\nimport config from './config';\r\nexport  default  axios.create({\r\n    baseURL :\"http://localhost:6969\",\r\n    withCredentials: true\r\n});","export default {\r\n    rootPath : process.env.REACT_APP_STATE === 'localhost'\r\n             ? 'http://localhost:6969' : ''\r\n};","import React, { Component } from 'react';\r\n\r\nclass SearchField extends Component {\r\n    handleTextSearch = event => this.props.onSearchChanged(event.target.value);\r\n    render() {\r\n        return (\r\n            <form className=\"col-3\">\r\n                <input onChange={this.handleTextSearch} className=\"form-control\" type='text' placeholder='Search'></input>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchField;","import React, { Component } from 'react';\r\n\r\nclass ProfilePanel extends Component {\r\n    render() {\r\n        const display = this.props.username ?(\r\n            <div>\r\n                <span className=\"navbar-text\">Welcome, {this.props.username}</span>\r\n            </div>\r\n        ) : (\r\n            <button className=\"btn btn-primary btn-block\" onClick={this.props.onLogin}>\r\n                Login\r\n            </button>\r\n        );\r\n        return (\r\n           <div className=\"col-3 profile_panel text-right\">\r\n                {display}\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePanel;","import React, {Component} from 'react';\r\nimport SearchField from './SearchField';\r\nimport logo from '../img/logo.png';\r\nimport ProfilePanel from './ProfilePanel';\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"navbar\">\r\n                <div className=\"container\">\r\n                    <SearchField onSearchChanged = {this.props.onSearchChanged}/>\r\n                    <div className=\"col-6\">\r\n                        <img className=\"logo\" src={logo}></img>\r\n                    </div>\r\n                    <ProfilePanel onLogin = {this.props.onLogin} username = {this.props.username}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport config from '../config';\r\nclass GirlImage extends Component {\r\n    \r\n    render() {\r\n        const comments = this.props.img.comment ? this.props.img.comment.map(comment => <p><span className=\"font-weight-bold\">{comment.createdBy.username}</span>\r\n         {\": \"} {comment.content}</p>) : \"\";\r\n        return (\r\n            \r\n            <div className=\"girl_image\">\r\n                \r\n                <img className=\"img-fluid\" src={\"http://localhost:6969\"+ this.props.img.imageUrl} alt={this.props.img.title}></img>\r\n                <h4>{this.props.img.title}</h4>\r\n                <p>{this.props.img.description}</p>\r\n                {comments}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GirlImage;","import React, { Component } from 'react';\r\nimport GirlImage from './GirlImage';\r\nimport {Link } from 'react-router-dom';\r\nclass MainContent extends Component {\r\n    render() {\r\n        const allImages = this.props.images.map(img =>(\r\n            <div key = {img._id} className=\"col-3\">\r\n            <Link to = { `images/${img._id}`}>\r\n                <GirlImage  img={img}></GirlImage>\r\n            </Link>\r\n            \r\n            </div>\r\n        ));\r\n        return (\r\n            <div className=\"container main_content\">\r\n                <div className=\"row\">\r\n                    {allImages}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainContent;","import React, { Component } from 'react';\r\nimport NavBar from '../Components/NavBar';\r\nimport axios from '../axios';\r\n\r\nimport MainContent from '../Components/MainContent';\r\nimport GirlImage from '../Components/GirlImage';\r\nclass HomeScreen extends Component {\r\n    // state, props\r\n  state =  {\r\n    images: [],\r\n    searchString :\"\",\r\n    \r\n  }\r\n  componentDidMount() {\r\n    axios.get('/api/images')\r\n          .then(data => {\r\n            console.log(data.data); \r\n            this.setState({images: data.data});\r\n            \r\n          })   \r\n          .catch(error => {console.log(error)});\r\n  }\r\n  \r\n  onSearchChanged =  text => this.setState({searchString : text});\r\n\r\n\r\n\r\n    render() {\r\n        const displayedImages = this.state.images.filter(\r\n            img => img.title.includes(this.state.searchString) \r\n              || img.description.includes(this.state.searchString));\r\n        return (\r\n            <div>\r\n                <NavBar onSearchChanged = {this.onSearchChanged} onLogin = {this.props.onLogin} username = {this.props.username}/>\r\n                <MainContent images={displayedImages}/> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeScreen;","import React, { Component } from 'react';\r\nimport GirlImage from '../Components/GirlImage';\r\nimport axios from '../axios';\r\nimport NavBar from '../Components/NavBar';\r\nclass DetailScreen extends Component {\r\n    state =  {\r\n        \r\n      }\r\n      componentDidMount() {\r\n        axios.get(`/api/images/${this.props.match.params.ImageId}`)\r\n              .then(data => {\r\n                this.setState({image: data.data});\r\n              })   \r\n              .catch(error => {console.log(error)});\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar onSearchChanged = {this.onSearchChanged} onLogin = {this._onLogin} username = {this.state.username}/>\r\n                <div className=\"main_content container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-8 mr-auto ml-auto\">\r\n                            {this.state.image ? <GirlImage img={this.state.image}/> : ''}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailScreen;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from './axios';\nimport HomeScreen from './Containers/HomeScreen';\nimport DetailScreen from './Containers/DetailScreen';\nimport {BrowserRouter, Route} from 'react-router-dom';\nclass App extends Component {\n    state = {};\n\n  _onLogin = () =>{\n    axios.post(\"/api/auth\", {\n        username: \"admin\",\n        password: '123456'\n    })\n    .then(response => this.setState({\n      username: response.data.username,\n      id: response.data.id\n    }))\n    .catch(error => console.log(error));\n  }\n\n  render() {\n    \n    \n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n          <Route exact path=\"/\" render ={ props =>{\n              return <HomeScreen {...props} username = {this.state.username} onLogin = {this._onLogin}/>\n          }}/>\n              \n          <Route path=\"/images/:ImageId\" render ={ props =>{\n              return <DetailScreen {...props} username = {this.state.username} onLogin = {this._onLogin}/>\n          }}/>   \n      </div>\n      </BrowserRouter>\n    );  \n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}